Q1.Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
A:通常保存在a0-a7中。13保存在a2中。

Q2.Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
A:由于内联函数，编译器并没有显式调用f函数和g函数。

Q3.At what address is the function printf located?
A:根据main函数中jalr	1536(ra) # 630 <printf>得到printf地址为0x630.

Q4.What value is in the register ra just after the jalr to printf in main?
A:是jarl的下一条指令的地址，0x38.

Q5.Run the following code.

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
      
What is the output? 
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? 
Would you need to change 57616 to a different value?
A:输出为He110 World。&i处所存储的数据分别是0x72:r, 0x6c:l, 0x64:d，0x00:空字符，如果变成big-endian，则i变为0x726c6400;.
57616不用改变，因为其十六进制数不变。

Q6.In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?

	printf("x=%d y=%d", 3);
A:输出为y=-2087429824，是一个随机值（无法确定）。
因为3向寄存器a0中传递参数，第二个输出没有被传递参数，所以说对应的输出是a1寄存器中的内容.